DOCKER IMAGE

➢ Complete Concept of Docker Images
➢ Build Docker Images
➢ Deploy Docker Images
➢ Docker Images Management
➢ Docker Hub Central Repository
➢ Manage Local Images
➢ In Docker, everything is based on Images. An image is a combination of a file system and parameters. Images contains the binaries and dependencies.
➢ Images Contains the data require to run the Container.
➢ List Docker Images
	docker images
➢ What is Docker Central Repository
➢ Tour of Docker Hub Official Site
	https://hub.docker.com
➢ Find Official Images
➢ Download Images
➢ Images Tags and their application
➢ Docker Images can be Downloaded from Docker Hub.
➢ Images can be committed with changes and have multiple versions. If you don't provide a specific version number, the client defaults to latest.
➢ Docker Images Differentiation.
➢ Base Image : Images that have no parent image, usually images with an OS like ubuntu, busybox or debian.
➢ Child Images : Images that build on base images and add additional functionality.
➢ Official images : Images that are officially maintained and supported by the folks at Docker. These are typically one word long.
➢ User images : Images created and shared by users like you and me. They build on base images and add additional functionality. Typically, these are formatted as user/image-name
➢ Download Docker Image.
	docker pull <image_name>
➢ Pull Specific Version
	docker pull <Image_name>:<Image_version>

------------------------
DOCKER HOSTORY

➢ Each image consists of a series of layers. Docker makes use of union file systems to combine these layers into a single image.
➢ Union file systems allow files and directories of separate file systems, known as branches.
➢ Show Image Layers: 
	docker history <image_name>
➢ History command shows different layers, command used for each layer, and the exact size of each image.

-------------------------
DOCKER TAG

➢ What exactly are Docker tags?
	-> Docker tags convey useful information about a specific image version/variant.
➢ Tags added to image during the Building of Image.
➢ Images can be tagged explicitly with the help of Tag Command.
	docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]
➢ When you don’t specify Docker Image tag. By default it takes ‘latest’ tag.

-------------------------

DOCKER IMAGE PUSH TO DOCKER HUB

➢ User must have the Account on hub.docker.com
➢ Docker Cloud uses Docker Hub as its native registry for storing both public and private repositories. Once you push your images to Docker Hub, they are available in Docker Cloud.
➢ Command to login:
	docker login
➢ Push Image on Docker Hub:
	docker image push USER/Image-name

-------------------------

PRATICAL:-	

	1. docker images : List Docker Images
	2. https://hub.docker.com : Docker Hub Official Site
	3. docker pull redis : Download the images
	4. docker pull redis:alpine : Pull Specific Version
	5. docker pull redis:7.0.14-alpine3.18
	6. docker history mysql:8.0 : Show Image Layers
	7. docker tag wordpress:latest sudha_wordpress:0.0.1 : Images can be tagged explicitly with the help of Tag Command
	8. docker login : You can use : docker login -u <username>
	9. docker tag redis:alpine sspradhan8055/redis_rest:0.0.1 : Create the tag
	10. docker push sspradhan8055/redis_rest:0.0.1 : docker push sspradhan8055/redis_rest:0.0.1
	
	
	